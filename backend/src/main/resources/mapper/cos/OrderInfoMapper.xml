<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.cos.dao.OrderInfoMapper">

    <!-- 分页获取订单信息 -->
    <select id="selectOrderPage" resultType="java.util.LinkedHashMap">
        select
        oi.id,
        oi.code,
        oi.order_name,
        oi.user_id,
        oi.vehicle_no,
        oi.day_price,
        oi.start_date,
        oi.end_date,
        oi.take_shop,
        oi.return_shop,
        oi.total,
        oi.create_date,
        oi.remark,
        ui.name as userName,
        vi.vehicle_number,
        vi.name as vehicleName,
        vi.images
        from
        order_info oi
        left join user_info ui on
        (ui.id = oi.user_id)
        left join vehicle_info vi on
        (vi.vehicle_no = oi.vehicle_no)
        where
        1 = 1
        <if test="orderInfo.code != null and orderInfo.code != ''">
            AND oi.code LIKE CONCAT('%',#{orderInfo.code},'%')
        </if>
        <if test="orderInfo.orderName != null and orderInfo.orderName != ''">
            AND oi.order_name LIKE CONCAT('%',#{orderInfo.orderName},'%')
        </if>
        <if test="orderInfo.vehicleNo != null and orderInfo.vehicleNo != ''">
            AND oi.vehicle_no LIKE CONCAT('%',#{orderInfo.vehicleNo},'%')
        </if>
        <if test="orderInfo.vehicleName != null and orderInfo.vehicleName != ''">
            AND vi.name LIKE CONCAT('%',#{orderInfo.vehicleName},'%')
        </if>
        <if test="orderInfo.vehicleNumber != null and orderInfo.vehicleNumber != ''">
            AND vi.vehicle_number LIKE CONCAT('%',#{orderInfo.vehicleNumber},'%')
        </if>
        order by
        oi.create_date desc
    </select>

    <!-- 根据时间获取订单信息 -->
    <select id="selectOrderByDate" resultType="cc.mrbird.febs.cos.entity.OrderInfo">
        select
        oi.id,
        oi.code,
        oi.order_name,
        oi.user_id,
        oi.vehicle_no,
        oi.day_price,
        oi.start_date,
        oi.end_date,
        oi.take_shop,
        oi.return_shop,
        oi.total,
        oi.create_date,
        oi.remark,
        DATE_FORMAT(oi.create_date, '%Y') AS year,
        DATE_FORMAT(oi.create_date, '%c') AS month
        from
        order_info oi
        where
        1 = 1
        <if test="year != null and year != ''">
            AND DATE_FORMAT(oi.create_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(oi.create_date, '%c') = #{month}
        </if>
    </select>

    <!-- 近十天收益统计 -->
    <select id="selectPriceByDay" resultType="java.util.LinkedHashMap">
        SELECT
        DATE_FORMAT( spo.days, '%m-%d' ) AS days,
        IFNULL(SUM(oi.total), 0) AS price
        FROM
        (
        SELECT
        DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
        LEFT JOIN order_info oi ON (
        DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
        <if test="shopCode != null">
            AND oi.shop_code = #{shopCode}
        </if>
        )
        GROUP BY
        days
        ORDER BY
        days ASC
    </select>

    <!-- 近十天工单统计 -->
    <select id="selectOrderNumByDay" resultType="java.util.LinkedHashMap">
        SELECT
        DATE_FORMAT( spo.days, '%m-%d' ) AS days,
        IFNULL(COUNT(oi.id), 0) AS count
        FROM
        (
        SELECT
        DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
        SELECT
        DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
        LEFT JOIN order_info oi ON (
        DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
        <if test="shopCode != null">
            AND oi.shop_code = #{shopCode}
        </if>
        )
        GROUP BY
        days
        ORDER BY
        days ASC
    </select>

    <!-- 维修统计 -->
    <select id="selectRepairMonth" resultType="java.util.LinkedHashMap">
        select
        tempDay.date,
        count(ri.id) as repairCount
        from
        (
        select
        date
        from
        (
        select
        DATE_FORMAT(DATE_SUB(last_day(curdate()), interval xc-1 day), '%Y-%m-%d') as date
        from
        (
        select
        @xi := @xi + 1 as xc
        from
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc1,
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc2,
        (
        select
        @xi := 0) xc0
        ) xcxc) x0
        where
        x0.date >= (
        select
        date_add(curdate(), interval-day(curdate())+ 1 day))) as tempDay
        left join repair_info ri on
        (tempDay.date between ri.repair_start and ri.repair_end)
        where
        1 = 1
        group by
        tempDay.date asc
    </select>

</mapper>
